fileTypes: [
  "em"
  "embl"
  "emblem"
]
name: "Emblem"
patterns: [
  {
    include: "#comment"
  }
  {
    include: "#tag-selector"
  }
  {
    include: "#tag-alone"
  }
  {
    include: "#text"
  }
  {
    include: "#expression"
  }
]
repository:
  boolean:
    patterns: [
      {
        match: "\\btrue\\b"
        name: "constant.language.boolean.true.emblem"
      }
      {
        match: "\\bfalse\\b"
        name: "constant.language.boolean.false.emblem"
      }
    ]
  comment:
    captures:
      "1":
        name: "punctuation.section.comment.emblem"
    comment: "A comment, starting with a forward slash"
    match: "^\\s*(\\/)\\s*\\S.*$\\n?"
    name: "comment.line.slash.emblem"
  "double-quote-string":
    begin: "\""
    beginCaptures:
      "0":
        name: "punctuation.definition.string.begin.emblem"
    end: "\""
    endCaptures:
      "0":
        name: "punctuation.definition.string.end.emblem"
    name: "string.quoted.double.emblem"
    patterns: [
      {
        match: "\\\\."
        name: "constant.character.escape.emblem"
      }
    ]
  "explicit-attribute-expression":
    begin: "({)"
    comment: "An expression like button{action \"foo\"} or span class={ isActive:active \"foo\" }"
    end: "(})"
    patterns: [
      {
        include: "#expression-includes"
      }
    ]
  expression:
    begin: "((?:==?\\s?)?[\\w-]+)"
    beginCaptures:
      "1":
        name: "storage.type.function.emblem support.constant.emblem"
    comment: "A handlebars expression, written like a tag or starting with an equal sign"
    end: "(?=:\\s|\\s=|$|\\||'[^']+$)"
    name: "meta.expression.emblem"
    patterns: [
      {
        include: "#expression-includes"
      }
    ]
  "expression-includes":
    patterns: [
      {
        include: "#tag-attribute"
      }
      {
        include: "#double-quote-string"
      }
      {
        include: "#single-quote-string"
      }
      {
        include: "#keyword"
      }
      {
        include: "#boolean"
      }
      {
        include: "#number"
      }
      {
        include: "#variable"
      }
    ]
  "inline-expression":
    begin: "({{)"
    beginCaptures:
      "1":
        name: "storage.type.function.emblem support.constant.emblem"
    comment: "An inline handle bars expression, {{like \"this\"}}"
    end: "(}})"
    endCaptures:
      "1":
        name: "storage.type.function.emblem support.constant.emblem"
    patterns: [
      {
        include: "#expression-includes"
      }
    ]
  "inline-expression-alternative":
    begin: "(#\\{)"
    beginCaptures:
      "1":
        name: "storage.type.function.emblem support.constant.emblem"
    comment: "An alternative inline handle bars expression,"
    end: "(})"
    endCaptures:
      "1":
        name: "storage.type.function.emblem support.constant.emblem"
    patterns: [
      {
        include: "#expression-includes"
      }
    ]
  "inline-expression-unescaped":
    begin: "({{{)"
    beginCaptures:
      "1":
        name: "storage.type.function.emblem support.constant.emblem"
    comment: "An unescaped inline handle bars expression, {{{like \"this\"}}}"
    end: "(}}})"
    endCaptures:
      "1":
        name: "storage.type.function.emblem support.constant.emblem"
    patterns: [
      {
        include: "#expression-includes"
      }
    ]
  keyword:
    match: "\\b(in)\\b"
    name: "keyword.control.emblem"
  number:
    match: "\\d+(\\.\\d+)?"
    name: "constant.numeric.emblem"
  "single-quote-string":
    begin: "'"
    beginCaptures:
      "0":
        name: "punctuation.definition.string.begin.emblem"
    end: "'"
    endCaptures:
      "0":
        name: "punctuation.definition.string.end.emblem"
    name: "string.quoted.single.emblem"
    patterns: [
      {
        match: "\\\\."
        name: "constant.character.escape.emblem"
      }
    ]
  "tag-alone":
    begin: "((?:%[\\w-]+)|(?:a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(?:h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video))(?![\\w-])"
    beginCaptures:
      "1":
        name: "entity.name.tag.emblem"
    comment: "A HTML tag without any CSS selector"
    end: "(?=:\\s|\\s=|$)"
    name: "meta.tag.emblem"
    patterns: [
      {
        include: "#tag-includes"
      }
    ]
  "tag-attribute":
    begin: " (?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9]+)="
    beginCaptures:
      "1":
        name: "entity.other.attribute-name.namespace.emblem"
      "2":
        name: "entity.other.attribute-name.emblem"
      "3":
        name: "punctuation.separator.namespace.emblem"
      "4":
        name: "entity.other.attribute-name.localname.emblem"
    comment: "Custom attributes on tags and helpers (class=\"foo\", click=\"save\")"
    end: "(?=[\\s$})]|:\\s)"
    patterns: [
      {
        include: "#double-quote-string"
      }
      {
        include: "#single-quote-string"
      }
      {
        include: "#boolean"
      }
      {
        include: "#number"
      }
      {
        include: "#variable"
      }
      {
        include: "#explicit-attribute-expression"
      }
    ]
  "tag-includes":
    patterns: [
      {
        include: "#inline-expression-unescaped"
      }
      {
        include: "#inline-expression"
      }
      {
        include: "#inline-expression-alternative"
      }
      {
        include: "#explicit-attribute-expression"
      }
      {
        include: "#tag-attribute"
      }
    ]
  "tag-selector":
    begin: "((?:%[\\w-]+)|(?:a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(?:h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video))?([.#][.#\\w-]+)"
    beginCaptures:
      "1":
        name: "entity.name.tag.emblem"
      "2":
        name: "entity.other.attribute-name.emblem"
    comment: "A CSS selector, optionally prefixed with a HTML tag"
    end: "(?=:\\s|\\s=|$)"
    name: "meta.tag.emblem"
    patterns: [
      {
        include: "#tag-includes"
      }
    ]
  text:
    begin: "(?=(\\||')\\s*.)"
    comment: "Raw text, prefixed with a pipe character or an apostrophe"
    end: "(?=$)"
    name: "markup.raw.emblem"
    patterns: [
      {
        include: "#inline-expression-unescaped"
      }
      {
        include: "#inline-expression"
      }
      {
        include: "#inline-expression-alternative"
      }
    ]
  variable:
    match: "\\b[\\w.-]+!?(?![\\w-])"
    name: "variable.parameter.emblem"
scopeName: "source.emblem"
